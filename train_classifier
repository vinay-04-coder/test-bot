import pickle
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from tensorflow.keras.preprocessing.sequence import pad_sequences# type: ignore # Correct import

# Load data from pickle file
data_dict = pickle.load(open('./data.pickle', 'rb'))

# Inspect data shapes
print("Original data shapes:", [np.array(sample).shape for sample in data_dict['data']])

# Pad sequences to ensure all samples have the same length
data = pad_sequences(data_dict['data'], padding='post', dtype='float32')  # Pad with zeros at the end
labels = np.array(data_dict['labels'])

print("Preprocessed data shape:", data.shape)

# Split data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(data, labels, test_size=0.2, shuffle=True, stratify=labels)

# Train the RandomForest model
model = RandomForestClassifier()
model.fit(x_train, y_train)

# Predict and evaluate the model
y_predict = model.predict(x_test)
score = accuracy_score(y_predict, y_test)

print(f"{score * 100:.2f}% of samples were classified correctly!")

# Save the trained model
with open('model.p', 'wb') as f:
    pickle.dump({'model': model}, f)

